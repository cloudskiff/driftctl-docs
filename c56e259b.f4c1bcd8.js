(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{168:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return a})),r.d(t,"metadata",(function(){return s})),r.d(t,"toc",(function(){return c})),r.d(t,"default",(function(){return u}));var n=r(3),i=r(7),o=(r(0),r(203)),a={id:"limitations",title:"Known Issues and Limitations",sidebar_label:"Limitations"},s={unversionedId:"limitations",id:"version-0.4.0/limitations",isDocsHomePage:!1,title:"Known Issues and Limitations",description:"AWS Regions & Credentials Limits",source:"@site/versioned_docs/version-0.4.0/limitations.mdx",slug:"/limitations",permalink:"/0.4.0/limitations",editUrl:"https://github.com/cloudskiff/driftctl-docs/edit/main/versioned_docs/version-0.4.0/limitations.mdx",version:"0.4.0",sidebar_label:"Limitations",sidebar:"version-0.4.0/docs",previous:{title:"Installation",permalink:"/0.4.0/installation"},next:{title:"IaC Source",permalink:"/0.4.0/usage/cmd/scan/iac-source"}},c=[{value:"AWS Regions &amp; Credentials Limits",id:"aws-regions--credentials-limits",children:[]},{value:"Terraform &amp; Providers Support",id:"terraform--providers-support",children:[]}],l={toc:c};function u(e){var t=e.components,r=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"aws-regions--credentials-limits"},"AWS Regions & Credentials Limits"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"The user needs to use the same AWS region and credentials for both the scanned infrastructure and the S3 bucket where the Terraform state is stored (for example, a Terraform state stored on S3 on us-east-1 for an infrastructure to be scanned on us-west-1 won't work). Think ",Object(o.b)("inlineCode",{parentName:"li"},"AWS_PROFILE")," for the underlying reason. See the related ",Object(o.b)("a",{parentName:"li",href:"https://github.com/cloudskiff/driftctl/discussions/130"},"GitHub Discussion"),"."),Object(o.b)("li",{parentName:"ul"},"driftctl currently doesn't support multiple aliased providers in a single Terraform state (like a single account but multiple regions). This will be implemented soon.")),Object(o.b)("h2",{id:"terraform--providers-support"},"Terraform & Providers Support"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Terraform version >= 0.12 is supported"),Object(o.b)("li",{parentName:"ul"},"Terraform AWS provider version >= 3.x is supported")))}u.isMDXComponent=!0},203:function(e,t,r){"use strict";r.d(t,"a",(function(){return p})),r.d(t,"b",(function(){return f}));var n=r(0),i=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=i.a.createContext({}),u=function(e){var t=i.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=u(e.components);return i.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=i.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,a=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(r),m=n,f=p["".concat(a,".").concat(m)]||p[m]||d[m]||o;return r?i.a.createElement(f,s(s({ref:t},l),{},{components:r})):i.a.createElement(f,s({ref:t},l))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,a=new Array(o);a[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,a[1]=s;for(var l=2;l<o;l++)a[l]=r[l];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"}}]);