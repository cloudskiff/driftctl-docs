(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{109:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return u})),n.d(t,"default",(function(){return d}));var r=n(3),o=n(7),a=(n(0),n(181)),c={id:"output",title:"Output Format"},s={unversionedId:"usage/cmd/scan/output",id:"version-0.6.0/usage/cmd/scan/output",isDocsHomePage:!1,title:"Output Format",description:"driftctl supports multiple kinds of output formats and by default uses the standard output (console).",source:"@site/versioned_docs/version-0.6.0/usage/cmd/scan/output.mdx",slug:"/usage/cmd/scan/output",permalink:"/0.6.0/usage/cmd/scan/output",editUrl:"https://github.com/cloudskiff/driftctl-docs/edit/main/versioned_docs/version-0.6.0/usage/cmd/scan/output.mdx",version:"0.6.0",sidebar:"version-0.6.0/docs",previous:{title:"IaC Source",permalink:"/0.6.0/usage/cmd/scan/iac-source"},next:{title:"Filtering Resources",permalink:"/0.6.0/usage/cmd/scan/filtering"}},u=[{value:"Console",id:"console",children:[{value:"Usage",id:"usage",children:[]},{value:"Structure",id:"structure",children:[]}]},{value:"JSON",id:"json",children:[{value:"Usage",id:"usage-1",children:[]},{value:"Structure",id:"structure-1",children:[]}]},{value:"Computed Fields",id:"computed-fields",children:[]}],i={toc:u};function d(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"driftctl supports multiple kinds of output formats and by default uses the standard output (console)."),Object(a.b)("h2",{id:"console"},"Console"),Object(a.b)("p",null,"Environment: ",Object(a.b)("inlineCode",{parentName:"p"},"DCTL_OUTPUT")),Object(a.b)("h3",{id:"usage"},"Usage"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-shell"},"$ driftctl scan\n$ driftctl scan --output console://\n$ DCTL_OUTPUT=console:// driftctl scan\n")),Object(a.b)("h3",{id:"structure"},"Structure"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-console"},"Found deleted resources:\n  aws_s3_bucket:\n    - driftctl-bucket-test-2\nFound unmanaged resources:\n  aws_s3_bucket:\n    - driftctl-bucket-test-3\nFound drifted resources:\n  - driftctl-bucket-test-1 (aws_s3_bucket):\n    ~ Versioning.0.Enabled: false => true\nFound 3 resource(s)\n - 33% coverage\n - 1 covered by IaC\n - 1 not covered by IaC\n - 1 deleted on cloud provider\n - 1/1 drifted from IaC\n")),Object(a.b)("h2",{id:"json"},"JSON"),Object(a.b)("h3",{id:"usage-1"},"Usage"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-shell"},"$ driftctl scan --output json:///tmp/result.json # Will output results to /tmp/result.json\n$ driftctl scan --output json://result.json # Will output results to ./result.json\n$ DCTL_OUTPUT=json://result.json driftctl scan\n")),Object(a.b)("h3",{id:"structure-1"},"Structure"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-json"},'{\n  summary: {\n    total_resources: 3,\n    total_drifted: 1,\n    total_unmanaged: 1,\n    total_deleted: 1,\n    total_managed: 1,\n  },\n  managed: [\n    // list of resources found in IaC and in sync with remote\n    {\n      id: "driftctl-bucket-test-1",\n      type: "aws_s3_bucket",\n    },\n  ],\n  unmanaged: [\n    // list of resources found in remote but not in IaC\n    {\n      id: "driftctl-bucket-test-3",\n      type: "aws_s3_bucket",\n    },\n  ],\n  deleted: [\n    // list of resources found in IaC but not on remote\n    {\n      id: "driftctl-bucket-test-2",\n      type: "aws_s3_bucket",\n    },\n  ],\n  differences: [\n    // A list of changes on managed resources\n    {\n      res: {\n        id: "driftctl-bucket-test-1",\n        type: "aws_s3_bucket",\n      },\n      changelog: [\n        {\n          type: "update", // Kind of change, could be one of update, create, delete\n          path: [\n            // Path of the change, sorted from root to leaf\n            "Versioning",\n            "0",\n            "Enabled",\n          ],\n          from: false, // Mixed type\n          to: true, // Mixed type\n        },\n      ],\n    },\n  ],\n  coverage: 33,\n}\n')),Object(a.b)("h2",{id:"computed-fields"},"Computed Fields"),Object(a.b)("p",null,"From Terraform documentation, a ",Object(a.b)("inlineCode",{parentName:"p"},"computed")," field is often used to represent values that are not user configurable or can not be known at time of ",Object(a.b)("inlineCode",{parentName:"p"},"terraform plan")," or ",Object(a.b)("inlineCode",{parentName:"p"},"apply"),"."),Object(a.b)("p",null,"Since those values are not known ahead of time from terraform point of view, it is obviously possible that the values displayed in a terraform state file are not up-to-date and may require a ",Object(a.b)("inlineCode",{parentName:"p"},"terraform refresh"),"."),Object(a.b)("p",null,"Thus, it could be possible that driftctl finds drifts that are considered false positives because of those outdated values."),Object(a.b)("p",null,"We decided to output computed fields and to display a message at the end of the scan to remind you of this behavior."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-shell"},'Found drifted resources:\n  - eipalloc-0e2894d8ea42851df (aws_eip):\n    ~ AssociationId: "" => "eipassoc-0ee67e1ca759733a2" (computed)\n    ~ Instance: "" => "i-004611704837fd09a" (computed)\n    ~ NetworkInterface: "" => "eni-0a62972b0471447f6" (computed)\n    ~ PrivateDns: <nil> => "ip-172-31-40-4.eu-west-3.compute.internal" (computed)\n    ~ PrivateIp: "" => "172.31.40.4" (computed)\nFound 1 resource(s)\n - 100% coverage\n - 1 covered by IaC\n - 0 not covered by IaC\n - 0 deleted on cloud provider\n - 1/1 drifted from IaC\nYou have diffs on computed fields, check the documentation for potential false positive drifts\n')))}d.isMDXComponent=!0},181:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return b}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=o.a.createContext({}),d=function(e){var t=o.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=d(e.components);return o.a.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},f=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,i=u(e,["components","mdxType","originalType","parentName"]),l=d(n),f=r,b=l["".concat(c,".").concat(f)]||l[f]||p[f]||a;return n?o.a.createElement(b,s(s({ref:t},i),{},{components:n})):o.a.createElement(b,s({ref:t},i))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=f;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:r,c[1]=s;for(var i=2;i<a;i++)c[i]=n[i];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"}}]);